{
  "identifier": "co.gwil.deno",
  "name": "Deno",
  "organization": "Sam Gwilym",
  "description": "Everything you need for TypeScript and JavaScript development.",
  "version": "1.4.1",
  "categories": [
    "languages",
    "formatters",
    "issues",
    "completions",
    "tasks",
    "commands",
    "sidebars"
  ],
  "repository": "https://github.com/sgwilym/nova-deno",
  "bugs": "https://github.com/sgwilym/nova-deno/issues",

  "main": "main.js",

  "entitlements": {
    "process": true,
    "filesystem": "readwrite"
  },

  "funding": "https://github.com/sponsors/sgwilym",

  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:tsx",
    "onLanguage:javascript",
    "onLanguage:jsx"
  ],

  "config": [
    {
      "key": "co.gwil.deno.config.enableLinting",
      "title": "Enable linting",
      "description": "Turn on Deno's built-in linting.",
      "type": "boolean",
      "default": true
    },
    {
      "key": "co.gwil.deno.config.formatOnSave",
      "title": "Format document on save",
      "description": "Use Deno's built-in formatter to format files when they are saved.",
      "type": "boolean",
      "default": true
    },
    {
      "key": "co.gwil.deno.config.cacheOnSave",
      "title": "Cache dependencies on save",
      "description": "Automatically cache dependencies when a file is saved.",
      "type": "boolean",
      "default": false
    },
    {
      "key": "co.gwil.deno.config.completeFunctionCalls",
      "title": "Complete function calls",
      "description": "Whether to include parentheses and argument placeholders when selecting an autocomplete option for a function whose signature is known.",
      "type": "boolean",
      "default": false
    }
  ],

  "configWorkspace": [
    {
      "key": "deno.enable",
      "title": "Enable Deno features",
      "type": "boolean",
      "description": "Use this to disable the usage of Deno with specific projects. This option will be overriden by the 'Enable paths' and 'Disabled paths' options.",
      "default": true
    },
    {
      "key": "co.gwil.deno.config.enableUnstable",
      "title": "Support unstable Deno APIs",
      "type": "boolean",
      "default": false
    },
    {
      "key": "co.gwil.deno.config.enableLinting",
      "title": "Enable linting",
      "description": "Turn on Deno's built-in linting.",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    },
    {
      "key": "co.gwil.deno.config.formatOnSave",
      "title": "Format document on save",
      "description": "Use Deno's built-in formatter to format files when they are saved. Requires Deno 1.37.",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    },
    {
      "key": "co.gwil.deno.config.cacheOnSave",
      "title": "Cache dependencies on save",
      "description": "Automatically cache dependencies when a file is saved.",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    },
    {
      "key": "deno.enablePaths",
      "title": "Enabled paths",
      "description": "Restrict extension functionality to the specified paths.",
      "type": "pathArray",
      "allowFolders": true,
      "relative": true,
      "default": []
    },
    {
      "key": "deno.disablePaths",
      "title": "Disabled paths",
      "description": "Exclude extension functionality from the specified paths.",
      "type": "pathArray",
      "allowFolders": true,
      "relative": true,
      "default": []
    },
    {
      "key": "co.gwil.deno.config.import-map",
      "title": "Import map",
      "link": "https://deno.land/manual/linking_to_external_code/import_maps",
      "description": "Load import map file from local file or remote URL. Automatically detected in the deno.json as of Deno 1.20.",
      "type": "string"
    },
    {
      "title": "Import suggestions",
      "type": "section",
      "description": "Deno is able to provide completions for URL imports. Because remote servers could provide false suggestions in an attempty to get you to run untrusted code, you must explicitly indicate trust for each registry. Putting the same registry in both of these sections will lead to unexpected results!",
      "children": [
        {
          "key": "co.gwil.deno.config.trustedImportHosts",
          "title": "Trusted hosts",
          "type": "stringArray"
        },
        {
          "key": "co.gwil.deno.config.untrustedImportHosts",
          "title": "Untrusted hosts",
          "type": "stringArray"
        }
      ]
    },
    {
      "title": "Performance settings",
      "type": "section",
      "description": "Advanced settings which may improve the performance of Deno's LSP server.",
      "children": [
        {
          "key": "co.gwil.deno.config.documentPreloadLimit",
          "title": "Document preload limit",
          "type": "number",
          "description": "The number of file system entries to for the LSP to preload.",
          "min": 0
        },
        {
          "key": "co.gwil.deno.config.maxTsServerMemory",
          "title": "TypeScript isolate memory limit",
          "type": "number",
          "description": "The maximum amount of memory the language server's internal TypeScript isolate is permitted to occupy.",
          "min": 0
        }
      ]
    }
  ],

  "sidebars": [
    {
      "id": "co.gwil.deno.sidebars.symbols",
      "name": "Deno Symbols",
      "largeImage": "sidebar_large",
      "smallImage": "sidebar_small",
      "sections": [
        {
          "id": "co.gwil.deno.sidebars.symbols.sections.1",
          "placeholderText": "Use the Find Symbol command to find symbols with Deno.",
          "name": "Symbols",
          "headerCommands": [
            {
              "title": "Find",
              "command": "co.gwil.deno.sidebars.symbols.commands.find"
            }
          ]
        }
      ]
    },
    {
      "id": "co.gwil.deno.sidebars.tests",
      "name": "Deno Tests",
      "largeImage": "test_sidebar_large",
      "smallImage": "test_sidebar_small",
      "sections": [
        {
          "id": "co.gwil.deno.sidebars.tests.sections.1",
          "placeholderText": "No tests were found.",
          "name": "Tests",
          "headerCommands": [
            {
              "title": "Learn more",
              "command": "co.gwil.deno.sidebars.tests.commands.learn"
            },
            {
              "title": "Refresh",
              "tooltip": "Check for the addition or removal of test files",
              "command": "co.gwil.deno.sidebars.tests.commands.refresh",
              "image": "__builtin.refresh"
            },
            {
              "title": "Run All",
              "command": "co.gwil.deno.sidebars.tests.commands.runAll",
              "image": "run"
            }
          ],
          "contextCommands": [
            {
              "title": "Run",
              "command": "co.gwil.deno.sidebars.tests.commands.run",
              "when": "viewItem == 'file'"
            }
          ]
        }
      ]
    }
  ],

  "commands": {
    "editor": [
      {
        "title": "Format Document",
        "command": "co.gwil.deno.commands.formatDocument",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Rename Symbol",
        "command": "co.gwil.deno.commands.rename",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Find Symbol",
        "command": "co.gwil.deno.commands.find",
        "when": "shouldDisplayFeatures"
      },
      {
        "title": "Cache dependencies",
        "command": "co.gwil.deno.commands.cache",
        "filters": {
          "syntaxes": ["typescript", "tsx", "javascript", "jsx"]
        }
      },
      {
        "title": "Restart Deno LSP server",
        "command": "co.gwil.deno.commands.restartServer"
      }
    ]
  },

  "taskTemplates": {
    "run": {
      "name": "Run",
      "description": "Run a JavaScript or TypeScript program.",
      "tasks": {
        "run": {
          "resolve": "co.gwil.deno.tasks.run"
        }
      },
      "config": [
        {
          "key": "co.gwil.deno.tasks.run.config.script",
          "title": "Script path",
          "type": "path",
          "relative": true,
          "placeholder": "script.ts",
          "required": true,
          "filetype": ["ts"]
        },
        {
          "title": "Permissions",
          "description": "Script permissions",
          "type": "section",
          "children": [
            {
              "key": "co.gwil.deno.tasks.run.config.allow.all",
              "title": "Allow all permissions",
              "description": "Overrides any other permission preferences.",
              "type": "boolean",
              "default": false
            },
            {
              "key": "co.gwil.deno.tasks.run.config.allow.read",
              "title": "Allow file system read access",
              "type": "boolean",
              "default": false
            },
            {
              "key": "co.gwil.deno.tasks.run.config.allow.write",
              "title": "Allow file system write access",
              "type": "boolean",
              "default": false
            },
            {
              "key": "co.gwil.deno.tasks.run.config.allow.net",
              "title": "Allow network access",
              "type": "boolean",
              "default": false
            },
            {
              "key": "co.gwil.deno.tasks.run.config.allow.run",
              "title": "Allow running subprocesses",
              "type": "boolean",
              "default": false
            },
            {
              "key": "co.gwil.deno.tasks.run.config.allow.env",
              "title": "Allow environment access",
              "type": "boolean",
              "default": false
            }
          ]
        },
        {
          "key": "co.gwil.deno.tasks.run.config.import-map",
          "title": "Import map",
          "link": "https://deno.land/manual/linking_to_external_code/import_maps",
          "description": "Load import map file from local file or remote URL.",
          "type": "string"
        },
        {
          "key": "co.gwil.deno.tasks.run.config.cert",
          "title": "Certificate authority",
          "description": "Load a certificate authority from PEM encoded file",
          "type": "path"
        },
        {
          "key": "co.gwil.deno.tasks.run.config.custom-options",
          "title": "Custom options",
          "description": "Other options to pass to Deno's run command.",
          "type": "stringArray"
        },
        {
          "key": "co.gwil.deno.tasks.run.config.user-args",
          "title": "User arguments",
          "description": "Arguments to pass to the script being run.",
          "type": "stringArray"
        }
      ]
    },
    "bundle": {
      "name": "Bundle",
      "description": "Output a single JavaScript file with all dependencies.",
      "persistent": false,
      "tasks": {
        "run": {
          "resolve": "co.gwil.deno.tasks.bundle"
        }
      },
      "config": [
        {
          "key": "co.gwil.deno.tasks.bundle.config.source-file",
          "title": "Source file",
          "type": "path",
          "relative": true,
          "placeholder": "entry.ts",
          "required": true,
          "filetype": ["ts"]
        },
        {
          "key": "co.gwil.deno.tasks.bundle.config.out-file-dir",
          "title": "Output file directory",
          "type": "path",
          "relative": false,
          "placeholder": "script.ts",
          "required": true,
          "allowFiles": false,
          "allowFolders": true
        },
        {
          "key": "co.gwil.deno.tasks.bundle.config.out-file-name",
          "title": "Output file name",
          "type": "string",
          "placeholder": "outfile.ts",
          "required": true
        },
        {
          "key": "co.gwil.deno.tasks.bundle.config.import-map",
          "title": "Import map",
          "link": "https://deno.land/manual/linking_to_external_code/import_maps",
          "description": "Load import map file from local file or remote URL.",
          "type": "string"
        },
        {
          "key": "co.gwil.deno.tasks.bundle.config.cert",
          "title": "Certificate authority",
          "description": "Load a certificate authority from PEM encoded file",
          "type": "path"
        },
        {
          "key": "co.gwil.deno.tasks.bundle.config.custom-options",
          "title": "Custom options",
          "description": "Other options to pass to Deno's run command.",
          "type": "stringArray"
        }
      ]
    }
  }
}
